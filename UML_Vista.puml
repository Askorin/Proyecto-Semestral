@startuml
hide empty methods
skinparam linetype ortho
hide empty fields
skinparam legendBackgroundColor #ffffff
legend

|= field |= method |=  |
|  <img:http://s.plantuml.com/private-field.png>     |   <img:http://s.plantuml.com/private-method.png>     | private |
|  <img:http://s.plantuml.com/protected-field.png>   |   <img:http://s.plantuml.com/protected-method.png>   | protected |
|  <img:http://s.plantuml.com/package-private-field.png>     |   <img:http://s.plantuml.com/package-private-method.png>    | package private |
|  <img:http://s.plantuml.com/public-field.png>     |   <img:http://s.plantuml.com/public-method.png>     | public |

endlegend


package "vista" {
  class VistaEscenaZoo {

  }

  class ZooListener {

  }

  class PanelListener {

  }

  class DrawVisitor {
    {field} - g : Graphics
    {field} textCounter : int
    {field} - cameraX : int
    {field} - cameraY : int
    {field} - cameraWidth: int
    {field} - cameraHeight : int
    {field} - cameraWidthTol : int
    {field} - cameraHeightTol : int
    {field} - cameraSpeed : int
    {field} - mouseX : int
    {field} - mouseY : int
    {field} - isDragging : boolean
    {field} - prevMousePos : ZooPoint
    {method} - updateCamera() : void

  }

  enum Layer {
    
  }

  class PanelContainer {
    {method} + switchPanel(NavArrowOrientation) : void
  }

  class ItemPanel<T extends Enum<T> & MenuItem> {
    {field} - clazz : Class<T>
    {field} - background : BufferedImage
    {field} - bgDim : Dimension
    {field} - BORDER_MARGIN : int
    {field} - ITEM_SPACING : int
    {method} - values() : T[]
    {method} - createLabels(int, PanelListener, JPanel) : void
    {method} - addNavArrowR(int, PanelListener) : void
    {method} - addNavArrowL(int, PanelListener) : void
  }
  
  class ItemLabel<T extends MenuItem> {
    {field} - itemEnum: T
    {field} - defaultIcon : ImageIcon
    {field} - hoverIcon : ImageIcon
    {field} - hoverState : boolean
  }

  class LabelNavArrow {
    {field} - hoverState : boolean
    {field} - defaultIcon : ImageIcon
    {field} - hoverIcon : ImageIcon
    {field} - imgDim : Dimension
  }

  enum NavArrowOrientation {
    {field} - path: String
  }

  interface HoverVisuals {
    {method} setHoverState(boolean) : void
  }  
}


package "utilities" {
  class Hitbox {
    {field} + x : int
    {field} + y : int
    {field} + width : int
    {field} + height : int
    {method} {static} + isHitboxContained(Hitbox, Hitbox) : boolean
    {method} {static} + checkPointHitboxCollision(Hitbox, ZooPoint) : boolean
    {method} {static} + checkHitboxCollision(Hitbox, Hitbox) : boolean
    {method} {static} + getClosestPointToHitbox(Hitbox, Hitbox) : ZooPoint
  }
  
  class ZooPoint {
    {field} + x : int
    {field} + y : int
    {method} {static} + getDifference(ZooPoint, ZooPoint) : ZooPoint
  }

  class Utilities {
    {method} {static} + getNormalizedVector(ZooPoint) : ZooPoint
    {method} {static} + getNormalizedVector(ZooPoint, int) : ZooPoint
    {method} {static} + loadImage(String) : Image
    {method} {static} + loadImage(String, int) : Image
  }
}


package "visitor" {
  interface Visitor {
    {method} visitAnimal(Animal) : void
    {method} visitHabitat(Habitat) : void
    {method} visitZoo(Zoo) : void
    {method} visitHabitatPlacementManager(HabitatPlacementManager) : void
    {method} visitAnimalPlacementManager(AnimalPlacementManager) : void
    {method} visitFoodPlacementManager(FoodPlacementManager) : void
    {method} visitFoodDisplay(FoodDisplay) : void
    {method} visitFoodArea(FoodArea) : void
    {method} visitTextMessageManager(TextMessageManager) : void
    {method} visitTextMessage(TextMessage) : void
  }
  interface Visitable {
    {method} accept(Visitor) : void
  }
}


package "modelo" {
  class EscenaZoo
  class Zoo
}


package "Swing" {
  class CardLayout
  interface MouseInputListener
  interface MouseMotionListener
}


' Asociación
LabelNavArrow --> NavArrowOrientation
VistaEscenaZoo --> EscenaZoo
DrawVisitor --> Layer
DrawVisitor --> EscenaZoo
DrawVisitor --> Zoo



' Composición
VistaEscenaZoo *-- DrawVisitor
VistaEscenaZoo *-- PanelContainer
PanelContainer *-- ItemPanel


' Agregación
PanelContainer --> CardLayout

' Implementación
HoverVisuals <|.. ItemLabel
HoverVisuals <|.. LabelNavArrow
MouseInputListener <|.. ZooListener
MouseInputListener <|.. PanelListener
MouseMotionListener <|.. ZooListener
Visitor <|.. DrawVisitor

' Nesting
VistaEscenaZoo +-- ZooListener
LabelNavArrow +-- NavArrowOrientation
DrawVisitor +-- Layer

' Dependencia
ItemPanel ..> PanelListener
PanelContainer ..> PanelListener
PanelContainer ..> NavArrowOrientation
Visitable ..> Visitor
Hitbox ..> ZooPoint
Utilities ..> ZooPoint


' Herencia/Generalización no Swing


' Herencia/Generalización Swing
@enduml